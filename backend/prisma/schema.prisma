// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  uuid String @db.Uuid @default(uuid()) @unique
  fullname String
  avatarUrl String?
  email String @unique
  emailVerifiedAt DateTime?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages Message[] @relation("User Has Messages",name: "mu")
  chatRooms ChatRoom[] @relation("User Has ChatRooms",name: "cu")
}

model ChatRoom {
  id  Int @id @default(autoincrement())
  name String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users User[] @relation("ChatRoom Has Users",name: "uc")
  messages Message[]
}

model Message {
  id  Int @id @default(autoincrement())
  content String
  imageUrl String?
  userId  Int
  chatroomId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User @relation(fields: [userId], references: [id],onDelete: Cascade)
  chatroom ChatRoom @relation(fields: [chatroomId],references: [id], onDelete: Cascade)
}